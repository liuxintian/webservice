<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
		      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			  http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
			  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		">

	
    <oauth:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices">
        <oauth:refresh-token/>
        <oauth:password/>
    </oauth:authorization-server>

    <oauth:resource-server id="resourceServerFilter" token-services-ref="tokenServices"/>

    <bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="clientAuthenticationManager"/>
    </bean>

    <bean id="clientAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="typeName" value="Basic"/>
    </bean>

    <bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="test"/>
    </bean>
    
	<bean id="userTokenEnhancer" class="com.omt.cms.mobile.security.UserTokenEnhancer" />
	
    <bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
		<property name="accessTokenValiditySeconds" value="5184000"/>
        <property name="clientDetailsService" ref="clientDetailsService"/>
        <property name="tokenEnhancer" ref="userTokenEnhancer" />
    </bean>

	<!--     
    <bean id="corsFilter" class="com.rapidinstinct.avia.plat.service.rest.filter.CORSFilter"/>
    <bean id="corsFilter" class="org.apache.catalina.filters.CorsFilter"/>
     -->

    <sec:http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager">
   		<sec:intercept-url pattern="/oauth/token" method="OPTIONS" access="IS_AUTHENTICATED_ANONYMOUSLY"  />
   		<sec:intercept-url pattern="/oauth/token" method="POST" access="IS_AUTHENTICATED_FULLY"  />
        <sec:anonymous enabled="true"/>
        <sec:http-basic entry-point-ref="clientAuthenticationEntryPoint"/>
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" /> 
        <sec:access-denied-handler ref="oauthAccessDeniedHandler"/>
        <!-- 
        <sec:custom-filter ref="corsFilter" after="LAST"/>
         -->
    </sec:http>

</beans>